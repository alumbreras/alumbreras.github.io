E_C <- samples$E_C
E_lambdas <- samples$E_lambdas
theta = mean(x) / sum(E_lambdas)
cat("\ntheta:", theta)
xx <- seq(0.1,20, by=0.1)
lb <- Q2(xx, E_C)
plot(xx, lb, xlab="theta", ylab="Q-C", main=i)
xx
lb <- Q2(xx, E_C)
samples <- gibbs(x, theta, E_lambdas, alpha, beta)
E_lambdas <- array(1, dim = c(K,N))
source('~/Documentos/Postdoc/src/rMMLE/analysis/test_lower_bounds_q1_q2.R')
lines(thetas, y)
lines(thetas, y)
plot(xx, lb, xlab="theta", ylab="Q-C", main=i)
lines(thetas, y)
points(thetas, y, color="red")
points(thetas, y, col="red")
plot(xx, lb, xlab="theta", ylab="Q-C", main=i)
debugSource('~/Documentos/Postdoc/src/rMMLE/analysis/test_lower_bounds_q1_q2.R')
debugSource('~/Documentos/Postdoc/src/rMMLE/analysis/test_lower_bounds_q1_q2.R')
debugSource('~/Documentos/Postdoc/src/rMMLE/analysis/test_lower_bounds_q1_q2.R')
source('~/Documentos/Postdoc/src/rMMLE/analysis/test_lower_bounds_q1_q2.R')
source('~/Documentos/Postdoc/src/rMMLE/analysis/test_lower_bounds_q1_q2.R')
source('~/Documentos/Postdoc/src/rMMLE/analysis/test_lower_bounds_q1_q2.R')
source('~/Documentos/Postdoc/src/rMMLE/analysis/test_lower_bounds_q1_q2.R')
source('~/Documentos/Postdoc/src/rMMLE/analysis/test_lower_bounds_q1_q2.R')
library(ggplot2)
source('~/Documentos/Postdoc/src/rMMLE/analysis/test_lower_bounds_q1_q2.R')
ggplot(df, aes(x = theta, y=value, group=method, color=method)) + geom_line()
debugSource('~/Documentos/Postdoc/src/rMMLE/analysis/test_lower_bounds_q1_q2.R')
p <- ggplot(df, aes(x = theta, y=value, group=method, color=method)) + geom_line()
p
print(p)
p <- ggplot(df, aes(x = theta, y=value, group=method, color=method)) + geom_line() + theme_bw()
p
debugSource('~/Documentos/Postdoc/src/rMMLE/analysis/test_lower_bounds_q1_q2.R')
debugSource('~/Documentos/Postdoc/src/rMMLE/analysis/test_lower_bounds_q1_q2.R')
p <- ggplot(df, aes(x = theta, y=value, group=method, color=method)) + geom_line() + theme_bw()
print(p)
p <- ggplot(df, aes(x = theta, y=value, group=method, color=method)) + geom_line() + theme_bw() + ggtitle(i)
p <- ggplot(df, aes(x = theta, y=value, group=method, color=method)) + geom_line() + theme_bw() + ggtitle(i)
p <- ggplot(df, aes(x = theta, y=value, group=method, color=method)) + geom_line() + theme_bw() + ggtitle("jj")
print(p)
p <- ggplot(df, aes(x = theta, y=value, group=method, color=method)) + geom_line() + theme_bw() + ggtitle(i)
print(p)
p <- ggplot(df, aes(x = theta, y=value, group=method, color=method)) + geom_line() + theme_bw() +
xlab("theta") + ylab("Q-C") + ggtitle(i)
print(p)
source('~/Documentos/Postdoc/src/rMMLE/analysis/test_lower_bounds_q1_q2.R')
source('~/Documentos/Postdoc/src/rMMLE/analysis/test_lower_bounds_q1_q2.R')
source('~/Documentos/Postdoc/src/rMMLE/analysis/test_lower_bounds_q1_q2.R')
source('~/Documentos/Postdoc/src/rMMLE/analysis/test_lower_bounds_q1_q2.R')
source('~/Documentos/Postdoc/src/rMMLE/analysis/test_lower_bounds_q1_q2.R')
debugSource('~/Documentos/Postdoc/src/rMMLE/analysis/test_lower_bounds_q1_q2.R')
p <- ggplot(df, aes(x = theta, y=value, group=method, color=method)) + geom_line() + theme_bw() +
xlab("theta") + ylab("Q-CH") + ggtitle(i)
print(p)
df
df <- rbind(df, data.frame(theta=thetas, value = lb, method=i))
df
df <- rbind(df, data.frame(theta=thetas, value = lb, method=i))
data.frame(theta=thetas, value = lb, method=i)
debugSource('~/Documentos/Postdoc/src/rMMLE/analysis/test_lower_bounds_q1_q2.R')
df <- rbind(df, data.frame(theta=thetas, value = lb, method=as.character(i)))
df
p <- ggplot(df, aes(x = theta, y=value, group=method, color=method)) + geom_line() + theme_bw() +
xlab("theta") + ylab("Q-CH") + ggtitle(i)
print(p)
debugSource('~/Documentos/Postdoc/src/rMMLE/analysis/test_lower_bounds_q1_q2.R')
df <- rbind(df, data.frame(theta=thetas, value = lb, method=as.character(i)))
p <- ggplot(df, aes(x = theta, y=value, group=method, color=method)) + geom_line() + theme_bw() +
xlab("theta") + ylab("Q-CH") + ggtitle(i)
print(p)
source('~/Documentos/Postdoc/src/rMMLE/analysis/test_lower_bounds_q1_q2.R')
source('~/Documentos/Postdoc/src/rMMLE/analysis/test_lower_bounds_q1_q2.R')
source('~/Documentos/Postdoc/src/rMMLE/analysis/test_lower_bounds_q1_q2.R')
source('~/Documentos/Postdoc/src/rMMLE/analysis/test_lower_bounds_q1_q2.R')
source('~/Documentos/Postdoc/src/rMMLE/analysis/test_lower_bounds_q1_q2.R')
source('~/Documentos/Postdoc/src/rMMLE/analysis/test_lower_bounds_q1_q2.R')
digamma(1)
digamma(0)
digamma(0.0001)
digamma(1/50)
digamma(1/70)
digamma(1/1000)
digamma(1/1000) - digamma(1)
digamma(1)
digamma(1)
digamma(1/1000) - digamma(1)
install.packages("logisticPCA")
View(z)
# For many datasets and many algorithms
# show the dictionary of each algorithm in each dataset
# (the best, if the algorithm has to choose K)
################################################################################
devtools::load_all()
library(dplyr)
library(tidyr)
library(ggplot2)
library(Matrix)
library(gtools)
library(data.table)
text_components <-  7
text_features <- 7
data("catalanparliament")
V <- catalanparliament
dataset <- 'parlamentcat'
data("lastfm")
V <- lastfm
dataset <- "lastfm"
Rcpp::sourceCpp('Documentos/Postdoc/src/rMMLE-DirBer/src/collapsed_gibbs_z_VB.cpp')
Rcpp::sourceCpp('Documentos/Postdoc/src/rMMLE-DirBer/src/collapsed_gibbs_z_VB.cpp')
setwd("~/Documentos/Postdoc/src/rMMLE/raw-data")
library(pixmap)
dirname <- './faces/'
dirs <- list.dirs("./faces")
files <- list.files(pattern = ".pgm", recursive = TRUE)
V <- matrix(nrow = 92*112, ncol = length(files))
for (i in 1:length(files)){
v <- read.pnm(file = files[i], cellres=1)
V[,i] <- floor(as.vector(v@grey)*256)
}
return(V)
dim(V)
dim(V)
v
image(v)
plot(v)
plot(v)
v <- read.pnm(file = files[i], cellres=1)
v
v <- floor(as.vector(v@grey)*256)
v
v
v
m <- matrix(1:12,3,4)
m
as.matrix(v)
m <- matrix(1:12,3,4)
v <- as.vector(m)
as.matrix(v, ncol = 4)
as.matrix(v, ncol = 4)
as.matrix(v, nrow = 3, ncol = 4)
m <- matrix(1:12,3,4)
m
v <- as.vector(m)
v
mm <- as.matrix(v, nrow = 3, ncol = 4)
mm
mm <- matrix(v, nrow = 3, ncol = 4)
mm
v <- read.pnm(file = files[i], cellres=1)
v
as.matrix()
as.matrix(v)
as.matrix(v@grey)
image(as.matrix(v@grey))
v <- read.pnm(file = files[i], cellres=1)
v <- floor(as.vector(v@grey)*256)
v
v <- read.pnm(file = files[i], cellres=1)
v
v <- read.pnm(file = files[i], cellres=1)
v <- floor(as.vector(v@grey)*256)
m <- matrix(v, nrow=92, ncol = 112)
m
image(m)
v <- read.pnm(file = files[i], cellres=1)
v <- floor(as.vector(v@grey)*256)
m <- matrix(v, ncol = 112, nrow=92)
image(m)
v <- read.pnm(file = files[i], cellres=1)
v <- as.vector(v@grey)
m <- matrix(v, ncol = 112, nrow=92)
image(m)
v <- read.pnm(file = files[i], cellres=1)
v <- as.vector(v@grey)
m <- matrix(v, ncol = 112, nrow=92)
image(m)
v <- read.pnm(file = files[i], cellres=1)
v <- as.vector(v@grey)
m <- matrix(v, nrow=92,  ncol = 112,)
image(m)
?matrix
v <- read.pnm(file = files[i], cellres=1)
v <- as.vector(v@grey)
m <- matrix(v, nrow=92,  ncol = 112, byrow=TRUE)
image(m)
v <- read.pnm(file = files[i], cellres=1)
v <- as.vector(v@grey)
m <- matrix(v, ncol=92,  nrow = 112, byrow=TRUE)
image(m)
v <- read.pnm(file = files[i], cellres=1)
v <- as.vector(v@grey)
m <- matrix(v, ncol=92,  nrow = 112, byrow=FALSE)
image(m)
v <- read.pnm(file = files[i], cellres=1)
v <- as.vector(v@grey)
m <- matrix(v, ncol=92,  nrow = 112, byrow=FALSE)
image(m)
v <- read.pnm(file = files[i], cellres=1)
v <- as.vector(v@grey)
m <- matrix(v, ncol=92,  nrow = 112)
image(m)
v <- read.pnm(file = files[i], cellres=1)
v <- as.vector(v@grey)
m <- matrix(v, ncol=92,  nrow = 112)
image(m)
image(m)
image(t(m))
image(m)
image(m)[,92:1]
image(m)[92:1,]
image(m[92:1,])
image(m[,92:1])
image(m[,92:1])
image(m[,1:92])
image(m[,92:1])
image(m[,1:92])
image(m[,92:1])
image(m[,1:92])
image(m[,92:1])
image(m[,1:92])
image(m[112:1,])
image(m[,112:1])
dim(m)
image(m[112:1,])
image(t(m[112:1,]))
image(t(m[,]))
image(t(m[112:1,]))
V <- matrix(nrow = 92*112, ncol = length(files))
v <- read.pnm(file = files[i], cellres=1)
plot(v)
?image
?image
image(t(m[112:1,]), asp=1)
image(t(m[112:1,]), asp=1)
image(t(m[112:1,]), asp=1)
image(t(m[112:1,]))
par(pty="s")
image(matrix(v, ncol=92,  nrow = 112))
par(pty="s")
image(matrix(v, ncol=92,  nrow = 112))
v
image(matrix(v@grey, ncol=92,  nrow = 112))
image(t(matrix(v@grey, ncol=92,  nrow = 112)))
image(t(m[112:1,]), asp=1)
image(t(m[112:1,]), asp=1)
image(t(m[112:1,]))
plot(v)
image(t(m[112:1,]), asp=1)
image(t(m[112:1,]), asp=1)
plot(v)
image(t(m[112:1,]), asp=92/112)
image(t(m[112:1,]), asp=92/112)
image(t(m[112:1,]), asp=112/92)
image(t(m[112:1,]), asp=112/92)
plot(v)
image(t(m[112:1,]), asp=112/92)
m
m <- matrix(v, ncol=92,  nrow = 112)
m <- matrix(v@grey, ncol=92,  nrow = 112)
image(t(m[112:1,]), asp=112/92)
image(t(m[112:1,]), asp=112/92, xaxs = FALSE)
image(t(m[112:1,]), asp=112/92, xaxt = FALSE)
image(t(m[112:1,]), asp=112/92, xaxt = "n")
image(t(m[112:1,]), asp=112/92, axt = "n", xaxt = "n")
image(t(m[112:1,]), asp=112/92, yaxt = "n", xaxt = "n")
image(t(m[112:1,]), asp=112/92, axes = FALSE)
plot(v)
image(t(m[112:1,]), asp=112/92, axes = FALSE)
m
m
image(t(m[112:1,])*255, asp=112/92, axes = FALSE)
image(t(m[112:1,])*255, asp=112/92, axes = FALSE)
image(t(m[112:1,])*255, asp=112/92, axes = FALSE)
image(t(m[112:1,]), asp=112/92, axes = FALSE, col=gray(255:1/255))
255:1/255
255:(1/255)
255:1/255
(255:1)/255
image(t(m[112:1,]), asp=112/92, axes = FALSE, col=gray(1:255/255))
plot(v)
image(t(m[112:1,]), asp=112/92, axes = FALSE, col=gray(1:256/256))
image(t(m[112:1,]), asp=112/92, axes = FALSE, col=gray(1:256/256))
image(t(m[112:1,]), asp=112/92, axes = FALSE, col=gray(1:100/100))
image(t(m[112:1,]), asp=112/92, axes = FALSE, col=gray(1:100/100))
image(t(m[112:1,]), asp=112/92, axes = FALSE, col=gray(1:100/100))
image(t(m[112:1,]), asp=112/92, axes = FALSE, col=gray(1:100/100))
image(t(m[112:1,]), asp=112/92, axes = FALSE, col=gray(1:10/10))
image(t(m[112:1,]), asp=112/92, axes = FALSE, col=gray(1:1000/1000))
image(t(m[112:1,]), asp=112/92, axes = FALSE, col=gray(1:256/256))
92*112
library(pixmap)
dirname <- './faces/'
dirs <- list.dirs("./faces")
files <- list.files(pattern = ".pgm", recursive = TRUE)
V <- matrix(nrow = 92*112, ncol = length(files))
for (i in 1:length(files)){
v <- read.pnm(file = files[i], cellres=1)
v <- floor(as.vector(v@grey)*256)
V[,i] <- floor(as.vector(v@grey)*256)
}
library(pixmap)
dirname <- './faces/'
dirs <- list.dirs("./faces")
files <- list.files(pattern = ".pgm", recursive = TRUE)
V <- matrix(nrow = 92*112, ncol = length(files))
for (i in 1:length(files)){
v <- read.pnm(file = files[i], cellres=1)
v <- floor(as.vector(v@grey)*256)
V[,i] <- floor(as.vector(v@grey)*256)
}
v <- read.pnm(file = files[i], cellres=1)
v <- floor(as.vector(v@grey)*256)
for (i in 1:length(files)){
v <- read.pnm(file = files[i], cellres=1)
V[,i] <- floor(as.vector(v@grey)*256)
}
plot_face <- function(arr10304){
m <- matrix(v@grey, ncol=92,  nrow = 112)
image(t(m[112:1,]), asp=112/92, axes = FALSE, col=gray(1:256/256))
}
plot_face(V[,1])
plot_face(V[,2])
plot_face(V[,10])
plot_face(V[,100])
plot_face(V[1,])
plot_face <- function(arr10304){
m <- matrix(arr10304, ncol=92,  nrow = 112)
image(t(m[112:1,]), asp=112/92, axes = FALSE, col=gray(1:256/256))
}
plot_face(V[1,])
plot_face(V[,1])
plot_face(V[,2])
plot_face(V[,3])
plot_face(V[,1])
v <- read.pnm(file = files[i], cellres=1)
v
plot(v)
i
plot_face(V[,401])
max(V)
floor(1*255)
floor(0.1*255)
floor(0.01*255)
floor(0.001*255)
floor(0.007*255)
floor(0.009*255)
dirname <- './faces/'
dirs <- list.dirs("./faces")
files <- list.files(pattern = ".pgm", recursive = TRUE)
V <- matrix(nrow = 92*112, ncol = length(files))
for (i in 1:length(files)){
v <- read.pnm(file = files[i], cellres=1)
V[,i] <- floor(as.vector(v@grey)*255)
}
V[,1]
arr10304 <- V[,1]
m <- matrix(arr10304, ncol=92,  nrow = 112)
image(t(m[112:1,]), asp=112/92, axes = FALSE, col=gray(0:255/255))
arr10304 <- V[,401]
m <- matrix(arr10304, ncol=92,  nrow = 112)
image(t(m[112:1,]), asp=112/92, axes = FALSE, col=gray(0:255/255))
plot(v)
v@grey
hist(v@grey)
v@grey==0
sum(v@grey==0)
sum(v@grey<0.001)
sum(v@grey<0.005)
sum(v@grey<0.006)
sum(v@grey<0.009)
sum(v@grey<0.010)
sum(v@grey<0.01)
sum(v@grey<0.02)
sum(v@grey<0.05)
library(pixmap)
dirname <- './faces/'
dirs <- list.dirs("./faces")
files <- list.files(pattern = ".pgm", recursive = TRUE)
V <- matrix(nrow = 92*112, ncol = length(files))
for (i in 1:length(files)){
v <- read.pnm(file = files[i], cellres=1)
V[,i] <- floor(as.vector(v@grey)*255)
}
faces <- V
devtools::use_data(faces)
data(faces)
data(mnist)
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::document()
devtools::load_all()
data("faces")
faces
dim(faces)
hist(faces)
plot_face(faces[,1])
plot_face(faces[,2])
plot_face(faces[,3])
plot_face(faces[,4])
plot_face(faces[,40])
plot_face(faces[,100])
#url <- "http://www.cl.cam.ac.uk/Research/DTG/attarchive/pub/data/att_faces.zip"
url <- "http://www.cl.cam.ac.uk/Research/DTG/attarchive/pub/data/att_faces.zip
filename <- basename(url)
)
slkjlkss
""
"))=à)="
setwd("~/Documentos/Sites/alumbreras.github.io/_posts")
url <- "http://www.cl.cam.ac.uk/Research/DTG/attarchive/pub/data/att_faces.zip"
filename <- basename(url)
filename
download.file(url = url, destfile = filename)
f <- gzfile(filename, "rb")
f
gzfile
?gzfile
unzip(filename)
unzip(filename, exdir = "faces")
library(pixmap)
url <- "http://www.cl.cam.ac.uk/Research/DTG/attarchive/pub/data/att_faces.zip"
filename <- basename(url)
download.file(url = url, destfile = filename)
unzip(filename, exdir = "faces")
dirname <- './faces/'
dirs <- list.dirs("./faces")
files <- list.files(pattern = ".pgm", recursive = TRUE)
V <- matrix(nrow = 92*112, ncol = length(files))
for (i in 1:length(files)){
v <- read.pnm(file = files[i], cellres=1)
V[,i] <- floor(as.vector(v@grey)*255)
}
V
V <- NA
library(pixmap)
url <- "http://www.cl.cam.ac.uk/Research/DTG/attarchive/pub/data/att_faces.zip"
filename <- basename(url)
download.file(url = url, destfile = filename)
unzip(filename, exdir = "faces")
dirname <- './faces/'
dirs <- list.dirs("./faces")
files <- list.files(pattern = ".pgm", recursive = TRUE)
V <- matrix(nrow = 92*112, ncol = length(files))
for (i in 1:length(files)){
v <- read.pnm(file = files[i], cellres=1)
V[,i] <- floor(as.vector(v@grey)*255)
}
ls
V
#'@title Plot a face
#'@details Given a vectorized image, reconstruct its matrix and plot it
plot_face <- function(arr10304){
m <- matrix(arr10304, ncol=92,  nrow = 112)
image(t(m[112:1,]), asp=112/92, axes = FALSE, col=gray(0:255/255))
}
# Plot some faces
par(mfrow=c(3,3))
for(i in 1:9){
plot_face(V[,i])
}
plot_face(V[,i])
par(mfrow=c(3,3))
plot_face(V[,i])
V[,i]
plot_face(V[,i])
par(mfrow=c(3,3))
plot_face(V[,i])
plot_face(V[,i])
par(mfrow=c(3,3), mar=c(0,0,0,0))
for(i in 1:9){
plot_face(V[,i])
}
par(mfrow=c(3,3), mar=c(0,0,0,0))
plot_face(V[,i])
plot_face(V[,i])
plot(1,2)
plot_face(V[,i])
plot_face(V[,i])
par(mfrow=c(3,3), mar=c(0,0,0,0))
plot_face(V[,i])
plot_face(V[,i])
plot_face(V[,i])
plot_face(V[,2])
plot_face(V[,3])
par(mfrow=c(3,3), mar=c(0,0,0,0))
plot_face(V[,3])
plot_face(V[,3])
par(mfrow=c(3,3), mar=c(0,0,0,0), oma=c(2,2,2,2))
plot_face(V[,3])
plot_face(V[,3])
plot_face(V[,3])
par(mfrow=c(3,3), mar=c(0,0,0,0), oma=c(2,2,2,2))
for(i in 1:9){
m <- matrix(V[,i], ncol=92,  nrow = 112)
image(t(m[112:1,]), asp=112/92, axes = FALSE, col=gray(0:255/255))
}
par(mfrow=c(3,3), mar=c(0,0,0,0), oma=c(2,2,2,2))
for(i in 1:9){
m <- matrix(V[,i], ncol=92,  nrow = 112)
image(t(m[112:1,]), asp=112/92, axes = TRUE, col=gray(0:255/255))
}
plot(1,2)
par(mfrow=c(3,3), mar=c(0,0,0,0), oma=c(2,2,2,2))
for(i in 1:9){
m <- matrix(V[,i], ncol=92,  nrow = 112)
image(t(m[112:1,]), asp=112/92, axes = TRUE, col=gray(0:255/255))
}
